package com.workscape.vehicleidentifier;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

/**
 * Hello world!
 * 
 */
public class VehicleIdentifier {
	
	Set<Vehicle> vehicles=new HashSet();
	Vehicle v;
	Set<Set<Wheel>> wheels=new HashSet();
	Set<Wheel> wlsub;
	Wheel w;
	int cnt;
	Wheel wl=new Wheel();
	String tmpValue;
	Set<Wheel> sw;

	 
	public static void main(String args[]) throws IOException
	 {
		
	  VehicleIdentifier vi=new VehicleIdentifier();
	  //System.out.println("Reading file from resources folder");
	  System.out.println("-----------------------------");	 
	  vi.readXMLFile("vehicles.xml");
//	  vi.readFile("vehicles.xml");
	 // vi.printReport();
//	  System.out.println("wheels --"+vi.wheels);
//	  System.out.println("vehicles --"+vi.vehicles);
//	  for (Vehicle v : vi.vehicles) {
//		//System.out.println(v.getVehicleID());
//		//System.out.println(v.getVehicleID());
//		Set<Wheel> wls=v.getWheels();
//		System.out.println("--"+wls);
//		for (Wheel wheel : wls) {
//			
//			System.out.println("--"+wheel);
//		}
//	}
	  for (Vehicle v : vi.vehicles) {
		System.out.println("id : "+v.getVehicleID());
		System.out.println("frameMaterial : "+v.getFrameMaterial());
		System.out.println("wh "+v.getWheels());
		for(Wheel w:v.getWheels()){
			System.out.println("wheel position  : "+w.getPosition());
		}
	  }
	  
	  System.out.println("-----------------------------");
	 }
	
	 

	private void readXMLFile(String fileName) {
			try {

			SAXParserFactory factory = SAXParserFactory.newInstance();
			SAXParser saxParser = factory.newSAXParser();

			DefaultHandler handler = new DefaultHandler() {

			 

			public void startElement(String uri, String localName,String qName,Attributes attributes) throws SAXException {			
				if (qName.equalsIgnoreCase("vehicle")) {
					v=new Vehicle();
				}else if (qName.equalsIgnoreCase("wheels")) {			
					wlsub=new HashSet();
				} 
			}

			public void endElement(String uri, String localName,
				String qName) throws SAXException {
				//System.out.println(qName);
				
				/*
				 * id
					material
					frame
					position
					material
					wheel
					position
					material
					wheel
					position
					material
					wheel
					wheels
					human
					powertrain
					vehicle
					id
					material
					frame
					position
					material
					wheel
					position
					material
					wheel
					wheels
					human
					powertrain
					vehicle
					vehicles

				 * */
				
				if(qName.equalsIgnoreCase("vehicle")){
				   	
				   	//System.out.println(v.getWheels());
					vehicles.add(v);
					//System.out.println(wlsub);
				
				}else if(qName.equalsIgnoreCase("id")){
					v.setVehicleID(tmpValue);
				}else if(qName.equalsIgnoreCase("material")){
					v.setFrameMaterial(tmpValue);
				}else if(qName.equalsIgnoreCase("frame")){
					w=new Wheel();
				}else if(qName.equalsIgnoreCase("position")){
					w.setPosition(tmpValue);
				}else if(qName.equalsIgnoreCase("material")){
					w.setMaterial(tmpValue);
				}else if (qName.equalsIgnoreCase("wheel")) {					
				   	wlsub.add(w);
				   	//sw=v.getWheels();
				   	//sw.addAll(wlsub);
				   //System.out.println(w);
				   // System.out.println(wlsub);
				
				}else if (qName.equalsIgnoreCase("wheels")) {
				   	
					
				}
					
			}

			public void characters(char ch[], int start, int length) throws SAXException {
					tmpValue=new String(ch,start,length);
					//System.out.println(ch);

			}

		     };
		     ClassLoader classLoader = this.getClass().getClassLoader();	   
			   File configFile=new File(classLoader.getResource(fileName).getFile());	
		       saxParser.parse(configFile, handler);
		 
		     } catch (Exception e) {
		       e.printStackTrace();
		     }
		  
	   }
		


		
	



	private void printReport() {
		// TODO Auto-generated method stub
		
		for (Vehicle v  : vehicles) {
			System.out.println(v.getVehicleID());
			System.out.println(v.getFrameMaterial());
			System.out.println(v.getPowerTrain());			
			Set<Wheel> w=v.getWheels();
			for (Wheel wheel : w) {
				System.out.println(wheel.getMaterial());
				System.out.println(wheel.getPosition());
			}
			
		}
		
	}



	 
	
}
